library(XML)
install.packages("XML")
library(XML)
fileUrl <- "http://en.wikipedia.org/wiki/Winter_olympics"
doc <- htmlParse(fileUrl)
doc <- htmlParse(fileUrl)
library(httr)
install.packages("httr")
library(httr)
library(XML)
fileUrl <- "http://en.wikipedia.org/wiki/Winter_olympics"
doc <- htmlParse(fileUrl)
doc <- htmlParse(fileUrl,encoding = "UTF-8")
doc <- htmlParse(fileUrl)
library(caret)
library(pROC)
library(ROCR)
setwd("C:/Users/sujat/OneDrive/Coursera/Projects/CrowdAnalytix/Project3")
COPDTrain = read.csv("CAX_COPD_TRAIN_data.csv",na.strings = c("","NA") ,stringsAsFactor= FALSE)
COPDTest = read.csv("CAX_COPD_TEST_data.csv",na.strings = c("","NA"), stringsAsFactor=FALSE)
Train = COPDTrain
Test = COPDTest
prop.table(table(Train$Exacer))
inTrain <- createDataPartition(Train$Exacer,p=.75)
training <- Train[inTrain[[1]], ]
testing <- Train[-inTrain[[1]], ]
prop.table(table(training$Exacer))
pp <- preProcess(training[,-c(1:2)])
training2 <- predict(pp, training[,-c(1:2)])
training2$Exacer <- training$Exacer
testing2 <- predict(pp, testing[,-c(1:2)])
testing2$Exacer <- testing$Exacer
LungFunAvg = rowMeans(training2[,c("LungFun9","LungFun14","LungFun4","LungFun3","LungFun12")])
DemoAvg = rowMeans(training2[,c("Demo2","Demo3","Demo4","Demo6")])
RespAvg = rowMeans(training2[,c("ResQues1a","ResQues1b","ResQues1c")])
training2$LowLungFun = ifelse(LungFunAvg<0 ,1,0)
training2$LowDemo = ifelse(DemoAvg<0 ,1,0)
training2$LowRespAvg = ifelse(RespAvg<0 ,1,0)
LungFunAvg = rowMeans(testing2[,c("LungFun9","LungFun14","LungFun4","LungFun3","LungFun12")])
DemoAvg = rowMeans(testing2[,c("Demo2","Demo3","Demo4","Demo6")])
RespAvg = rowMeans(testing2[,c("ResQues1a","ResQues1b","ResQues1c")])
testing2$LowLungFun = ifelse(LungFunAvg<0 ,1,0)
testing2$LowDemo = ifelse(DemoAvg<0 ,1,0)
testing2$LowRespAvg = ifelse(RespAvg<0 ,1,0)
LungFunAvg = rowMeans(Test[,c("LungFun9","LungFun14","LungFun4","LungFun3","LungFun12")])
DemoAvg = rowMeans(Test[,c("Demo2","Demo3","Demo4","Demo6")])
RespAvg = rowMeans(Test[,c("ResQues1a","ResQues1b","ResQues1c")])
Test$LowLungFun = ifelse(LungFunAvg<0 ,1,0)
Test$LowDemo = ifelse(DemoAvg<0 ,1,0)
Test$LowRespAvg = ifelse(RespAvg<0 ,1,0)
nmin <- sum(training2$Exacer == "1")
nmin
training2$Exacer <- factor(training$Exacer, levels=c(0,1), labels=c("No", "Yes"))
testing2$Exacer <- factor(testing$Exacer, levels=c(0,1), labels=c("No", "Yes"))
set.seed(100)
ctrl <- trainControl(method = "cv",
classProbs = TRUE,
number=10,
repeats=10,
summaryFunction = twoClassSummary)
rfDownsampled <- train(Exacer ~ ., data = training2,
method = "rf",
ntree = 1500,
tuneLength = 5,
metric = "ROC",
trControl = ctrl,
## Tell randomForest to sample by strata. Here,
## that means within each class
strata = training2$Exacer,
## Now specify that the number of samples selected
## within each class should be the same
sampsize = rep(nmin, 2),
importance = TRUE)
rfDownsampled$finalModel
downProbs <- predict(rfDownsampled, testing2, type = "prob")[,2]
table(testing2$Exacer,downProbs > 0.5)
varImp(rfDownsampled)
downsampledROC <- roc(response = testing2$Exacer,
predictor = downProbs,
levels = rev(levels(testing2$Exacer)))
predDown <- prediction(downProbs,testing2$Exacer)
perfDown <- performance(predDown, "tpr", "fpr")
plot(perfDown,col = rgb(1, 0, 0, .5), lwd = 2)
getTrainPerf(rfDownsampled)
auc(downsampledROC)
prop.table(table(Train$Exacer))
View(COPDTest)
library(ggplot2)
qplot(Train$SmokHis1,Train$Exacer)
qplot(Train$Exacer,Train$SmokHis1,geom="boxplot")
boxplot(SmokeHis1~Exacer,data = Train)
boxplot(SmokHis1~Exacer,data = Train)
boxplot(SmokHis2~Exacer,data = Train)
boxplot(SmokHis3~Exacer,data = Train)
boxplot(SmokHis4~Exacer,data = Train)
boxplot(SmokHis1+SmokHis2+SmokHis3+SmokHis4~Exacer,data = Train)
hist(Train$SmokHis1,breaks = 5)
par(mfrow=c(2,2))
hist(Train$SmokHis1,breaks = 5)
hist(Train$SmokHis2,breaks = 5)
hist(Train$SmokHis3,breaks = 5)
hist(Train$SmokHis4,breaks = 5)
boxplot(SmokHis3~Exacer,data = Train)
dev.off()
boxplot(SmokHis3~Exacer,data = Train)
class(Train$Exacer)
ggplot(Train,aes(x=SmokHis3,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smoth(method=glm,family=binomial)
ggplot(Train,aes(x=SmokHis3,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=SmokHis1,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=-SmokHis1,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=SmokHis1+SmokeHis2+SmokHis3+SmokHis4,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=SmokHis1+SmokHis2+SmokHis3+SmokHis4,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=(SmokHis1+SmokHis2+SmokHis3+SmokHis4)/4,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.2,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1b,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1c,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1d,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues2a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
varImp(rfDownsampled)
ggplot(Train,aes(x=ResQues1a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
nmin <- sum(training2$Exacer == "1")
nmin
sum(training2$Exacer == "1")
ggplot(Train,aes(x=ResQues1a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer)) +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer),xlab="Response") +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer))
xlab="Response" +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer))
xlab("Response") +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer))
+xlab("Response") +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)+
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer))
+ xlab("Response")
+ geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5)
+ stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer))
+ xlab("Response") + geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5) + stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer)) + xlab("Response") + geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5) + stat_smooth(method=glm,family=binomial,fullrange=TRUE)
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer)) +
xlab("Response") +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5) +
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
prop.table(table(Train$Exacer))
ggplot(Train,aes(x=ResQues1a+ResQues1b+ResQues1c+ResQues2a,y=Exacer)) +
xlab("Response") +
geom_point(position=position_jitter(width = 0.3,height=0.06),
alpha = 0.4,shape=21,size=1.5) +
stat_smooth(method=glm,family=binomial,fullrange=TRUE)
nrow(Train)
nrow(COPDTrain)
nrow(COPDTest)
