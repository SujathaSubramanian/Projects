if(first == "TRUE")
{
AllTeamInfo = TeamInfo
first = "FALSE"
}else
{
AllTeamInfo = rbind(AllTeamInfo ,TeamInfo)
}
AllTeamInfo
players = read.xlsx("ESPNLinks.xlsx",1)
i=59
first=""
while (i<= nrow(players))
{
if(players[i,6] == "No")
{
if(first != "FALSE")
first ="TRUE"
if(players[i,1] == "2011")
{
TeamInfo= Team2011.Info(players[i,1],as.character(players[i,2]),players[i,3])
TeamInfo = TeamInfo[-1,]
}
else if(players[i,1] == "2014")
{
TeamInfo= Team2014.Info(players[i,1],as.character(players[i,2]),players[i,3])
}
else
{
TeamInfo = Team.Info(players[i,1],as.character(players[i,2]),players[i,3],players[i,4] ,players[i,5])
TeamInfo = TeamInfo[-1,]
}
if(first == "TRUE")
{
AllTeamInfo = TeamInfo
first = "FALSE"
}else
{
AllTeamInfo = rbind(AllTeamInfo ,TeamInfo)
}
}
i = i+1
}
AllTeamInfo
write.xlsx2(AllTeamInfo,"PastTeamData.xls",sheetName="IPL Team Data",append=TRUE)
library(XLConnect)
wb <- loadWorkbook("PastTeamData.xls",create=FALSE)
appendWorksheet(wb, AllTeamInfo, sheet = "IPL Team Data")
saveWorkbook(wb,"PastTeamData.xls")
AllTeamInfo
library(XLConnect)
# mtcars xlsx file from demoFiles subfolder of package XLConnect
wb <- loadWorkbook("PastTeamData.xls",create=FALSE)
appendWorksheet(wb, AllTeamInfo, sheet = "IPL Team Data")
saveWorkbook(wb,"PastTeamData.xls")
write.xlsx2(AllTeamInfo,"PastTeamData.xls",sheetName="IPL Team Data",append=TRUE)
wb <- loadWorkbook("PastTeamData.xls",create=FALSE)
appendWorksheet(wb, AllTeamInfo, sheet = "IPL Team Data")
saveWorkbook(wb,"PastTeamData.xls")
wb <- loadWorkbook("PastTeamData.xls",create=FALSE)
appendWorksheet(wb, AllTeamInfo, sheet = "IPL Team Data")
saveWorkbook(wb,"PastTeamData.xls")
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
Names
players = players[!trim(players$Role) %in% "withdrawn player",]
players = read.xlsx("PastTeamData.xls", sheetName = "IPL Team Data")
players = players[!trim(players$Role) %in% "withdrawn player",]
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
Names
unique(Names)
players = players[!trim(players$Role) %in% c("coach","withdrawn player",]
players = players[!trim(players$Role) %in% c("coach","withdrawn player"),]
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
unique(Names)
unique(PlayerData$Names)
unique(PlayerData$Name)
str(PlayerData)
str(PlayesrData)
str(PlayersData)
unique(PlayersData$PlayerName)
OverallPlayer.Info = function(playername)
{
fileurl = paste0("http://www.cricmetric.com/playerstats.py?player=",playername)
#fileurl = paste0("http://www.cricmetric.com/playerstats.py?player=",PlayerNames[401])
fileurl = paste0(fileurl,"&format=all&role=all")
doc <- htmlParse(fileurl)
tableNodes = getNodeSet(doc,"//table")
Bowling.Info=NULL
Batting.Info=NULL
Player.Info=NULL
OverallPlayer.Info=NULL
nrows = length(tableNodes)
if(nrows == 0)
{
return(0)
}
else
{
j=1
while(j <= nrows)
{
Player.Info <-  readHTMLTable(tableNodes[[j]],
header=T,
which=1,
stringsAsFactors=F)
subDoc = xmlDoc(tableNodes[[j]])
hrefs <- xpathSApply(subDoc, "//table[@class = 'scoretable']/tr/td/a", xmlGetAttr, 'href')
hrefs
#hrefs = xpathSApply(subDoc, "//table[@class = 'scoretable']/tr/td//a[contains(@href, 'ODI')]",xmlValue)
if(length(grep("Test",hrefs))) {
Player.Info$format  = "Test"
} else if (length(grep("ODI",hrefs))) {
Player.Info$format  = "ODI"
} else if (length(grep("T20I",hrefs))) {
Player.Info$format  = "T20I"
} else if(length(grep("TWENTY20",hrefs)))
Player.Info$format  = "TWENTY20"
Player.Info = Player.Info[!Player.Info$Year=="Total",]
if(names(Player.Info)[6] == "Bowling Average")
{
type = "Bowling"
names(Player.Info)[3] = "BowlRuns"
names(Player.Info)[7] = "Bowl SR"
}else
{
type = "Batting"
}
length(Batting.Info)
#exists("Bowling.Info")
#exists("Player.Info")
if(type == "Bowling")
{
if( length(Bowling.Info) > 0)
{
Bowling.Info = rbind(Bowling.Info,Player.Info)
}else
{
Bowling.Info = Player.Info
}
}else
{
if(length(Batting.Info) > 0)
{
Batting.Info = rbind(Batting.Info,Player.Info)
}else
{
Batting.Info = Player.Info
}
}
j= j+1
}
nrow(Batting.Info) == NULL
nrow(Bowling.Info) == NULL
class(Batting.Info)
if(length(Batting.Info) > 0 & length(Bowling.Info) >0)
{
OverallPlayer.Info = merge(Batting.Info,Bowling.Info,by.x = c("Year","format"),by.y = c("Year","format"),all.x=TRUE,all.y=TRUE)
OverallPlayer.Info$PlayerName = playername
return(OverallPlayer.Info)
}
if(length(Batting.Info) > 0)
{
OverallPlayer.Info = cbind(Batting.Info,Overs="",BowlRuns="",Wickets="",Economy="",'Bowling Average'="",'Bowl SR'="")
OverallPlayer.Info$PlayerName = playername
return(OverallPlayer.Info)
}
if(length(Bowling.Info) >0)
{
OverallPlayer.Info = cbind(Runs="",Balls="",Outs="",'Strike Rate'="",'Batting Average'="",Bowling.Info)
OverallPlayer.Info$PlayerName = playername
return(OverallPlayer.Info)
}
return(0)
}
}
MissingPlayers = c("KV Sharma","S Chanderpaul","U Chand","TG Southee","K Cooper","BRM Taylor","TA Boult","KS Williamson","LR Shukla","Gurkeerat  Singh","Sean Abbott","Adam Milne")
length(MissingPlayers)
i=1
PlayerInfo.table = OverallPlayer.Info(PlayerNames[i])
PlayerNames = c("KV Sharma","S Chanderpaul","U Chand","TG Southee","K Cooper","BRM Taylor","TA Boult","KS Williamson","LR Shukla","Gurkeerat  Singh","Sean Abbott","Adam Milne")
PlayerInfo.table = OverallPlayer.Info(PlayerNames[i])
PlayerInfo.table
PlayerInfo.table
AllPlayerInfo = PlayerInfo.table
AllPlayerInfo
i = i+1
PlayerInfo.table = OverallPlayer.Info(PlayerNames[i])
AllPlayerInfo = rbind(AllPlayerInfo ,PlayerInfo.table)
AllPlayerInfo
PlayerNames = c("KV Sharma","S Chanderpaul","U Chand","TG Southee","K Cooper","BRM Taylor","TA Boult","KS Williamson","LR Shukla","Gurkeerat  Singh","Sean Abbott","Adam Milne")
i=1
while(i <=length(MissingPlayers))
{
PlayerInfo.table = OverallPlayer.Info(PlayerNames[i])
if(PlayerInfo.table != 0)
{
if(i == 1)
{
AllPlayerInfo = PlayerInfo.table
}else
{
AllPlayerInfo = rbind(AllPlayerInfo ,PlayerInfo.table)
}
}
i = i+1
}
AllPlayerInfo
write.xlsx(AllPlayerInfo,"PlayerData6.xls",sheetName="2015 IPL Player Data")
library(ggplot2)
library(plyr)
library(lattice)
library(xlsx)
#################
#Helper Functions
#################
trim <- function( x ) {
gsub("(^[[:space:]]+|[[:space:]]+$)", "", x)
}
#End############
IPLMatchResults = read.xlsx("IPLMatchResults.xlsx",1)
IPLTeamHome = read.xlsx("IPLMatchResults.xlsx",2)
IPLTeamName = read.xlsx("IPLMatchResults.xlsx",3)
unique(IPLMatchResults$Year)
IPLMatchResults$Team.1[IPLMatchResults$Team.1 == "Chargers"] = "Sunrisers"
IPLMatchResults$Team.2[IPLMatchResults$Team.2 == "Chargers"] = "Sunrisers"
IPLMatchResults$Winner[IPLMatchResults$Winner == "Chargers"] = "Sunrisers"
unique(IPLMatchResults$Team.1)
unique(IPLMatchResults$Team.2)
unique(IPLMatchResults$Winner)
IPLMatchResults = IPLMatchResults[!IPLMatchResults$Winner %in% c("abandoned","no result","tied" ),]
MatchResults = merge(IPLMatchResults,IPLTeamHome,by.x="Ground",by.y="GroundName")
MatchResults["LosingTeam"] = ifelse(as.character(MatchResults$Winner) == as.character(MatchResults$Team.1),
as.character(MatchResults$Team.2), as.character(MatchResults$Team.1))
MatchResults["HomeAwayWinner"] = ifelse(as.character(MatchResults$Winner) == as.character(MatchResults$GroundCode)
,"Home",ifelse(as.character(MatchResults$Loser) == as.character(MatchResults$GroundCode),"Away","Neutral"))
MatchResults = merge(MatchResults,IPLTeamName,by.x="Team.1",by.y="TeamCode")
MatchResults = rename(MatchResults, c("TeamName"="Team1Name"))
MatchResults = merge(MatchResults,IPLTeamName,by.x="Team.2",by.y="TeamCode")
MatchResults = rename(MatchResults, c("TeamName"="Team2Name"))
MatchResults$Team1Name = as.character(MatchResults$Team1Name)
MatchResults$Team2Name = as.character(MatchResults$Team2Name)
MatchResults$Team1Name[MatchResults$Team1Name == "Sunrisers Hyderabad "] = "Sunrisers Hyderabad"
MatchResults$Team2Name[MatchResults$Team2Name == "Sunrisers Hyderabad "] = "Sunrisers Hyderabad"
PastTeamData = read.xlsx("PastTeamData.xls", sheetName = "IPL Team Data",stringsAsFactors = F)
PastTeamData$TeamName[PastTeamData$TeamName == "Sunrisers Hyderabad "] = "Sunrisers Hyderabad"
PastTeamData$TeamName[PastTeamData$TeamName == "Deccan Chargers"] = "Sunrisers Hyderabad"
PastTeamData = PastTeamData[!trim(PastTeamData$Role) %in% c("withdrawn player","coach"),]
PastTeamData = read.xlsx("PastTeamData.xls", sheetName = "IPL Team Data",stringsAsFactors = F)
PastTeamData[!trim(PastTeamData$Role) %in% "withdrawn player",]
x=PastTeamData[!trim(PastTeamData$Role) %in% "withdrawn player",]
str(x)
x=PastTeamData[trim(PastTeamData$Role) %in% "withdrawn player",]
x
PastTeamData$TeamName[PastTeamData$TeamName == "Sunrisers Hyderabad "] = "Sunrisers Hyderabad"
PastTeamData$TeamName[PastTeamData$TeamName == "Deccan Chargers"] = "Sunrisers Hyderabad"
PastTeamData = PastTeamData[!trim(PastTeamData$Role) %in% c("withdrawn player","coach"),]
PlayersData = read.xlsx("PlayersData.xls",1,stringsAsFactors=F)
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
unique(Names)
players = read.xlsx("PastTeamData.xls", sheetName = "IPL Team Data")
players = players[!trim(players$Role) %in% c("coach","withdrawn player"),]
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
unique(Names)
PlayersData = read.xlsx("PlayersData.xls",1,stringsAsFactors=F)
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
unique(Names)
unique(PlayersData$PlayerName)
players = read.xlsx("PastTeamData.xls", sheetName = "IPL Team Data")
players = players[!trim(players$Role) %in% c("coach","withdrawn player"),]
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
unique(Names)
unique(PlayersData$PlayerName)  == "Shiv Chanderpaul"
subset(PlayersData,PlayerName == "Shiv Chanderpaul")
unique(PlayersData$PlayerName)
subset(PlayersData,PlayerName %in% "Shiv")
subset(PlayersData,PlayerName %in% "Shiv")
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
Names
PlayersData = read.xlsx("PlayersData.xls",1)
PlayersData[PlayersData$PlayerName]  == "Shiv Chanderpaul"
subset(PlayersData,PlayerName %in% "Shiv")
unique(PlayersData$PlayerName)
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
Names
unique(PlayersData$PlayerName)
unique(PlayersData$PlayerName)
subset(PlayersData,PlayerName %in% "Shiv")
i=1
subset(PlayersData,PlayerName %in% "Rahul")
subset(PlayersData,PlayerName == "Rahul")
subset(PlayersData,PlayerName == "Shiv Chanderpaul")
subset(PlayersData,PlayerName == "Kane Richardson")
PlayersData = read.xlsx("PlayersData.xls",1)
setwd("C:/Users/sujathas/OneDrive/Coursera/Projects/IPL")
PlayersData = read.xlsx("PlayersData.xls",1)
PlayersData = read.xlsx("PlayersData.xlsx",1)
PlayersData[PlayersData$PlayerName]  == "Shiv Chanderpaul"
PlayersData[PlayersData$PlayerName== "Shiv Chanderpaul",]
Names = players[!players$Name %in% unique(PlayersData$PlayerName),"Name"]
Names
PastTeamData
View(PastTeamData)
PastTeamData[PastTeamData$Year = "2015",]
PastTeamData[PastTeamData$Year == "2015",]
PastTeamData[PastTeamData$Year == "2014",]
IPLMatchResults[IPLMatchResults$Year == "2008",]
custom_function_totalruns <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1  &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs")]
data$Runs = sapply(data$Runs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Runs = sum(Runs),na.rm=TRUE)[2]
newdata <- x[order(-x$Runs),]
sum(newdata[1:n],na.rm=TRUE)
}
TeamWiseRuns = ddply(PastTeamData, .(Year,TeamName),  custom_function_totalruns)
names(TeamWiseRuns)[3] = "Total Runs"
str(PlayersData)
#2
custom_function_totalwickets <- function(df)
{
#df1 = data.frame(df$TeamName,df$Year)
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1  &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Wickets")]
data$Wickets = sapply(data$Wickets, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Wickets = sum(Wickets),na.rm=TRUE)[2]
newdata <- x[order(-x$Wickets),]
sum(newdata[1:n],na.rm=TRUE)
}
TeamWiseWickets = ddply(PastTeamData, .(Year,TeamName),  custom_function_totalwickets)
names(TeamWiseWickets)[3] = "Total Wickets"
#3
custom_function_totalouts <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1  &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Outs")]
data$Outs = sapply(data$Outs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Outs = sum(Outs),na.rm=TRUE)[2]
newdata <- x[order(-x$Outs),]
sum(newdata[1:n],na.rm=TRUE)
}
TeamWiseOuts = ddply(PastTeamData, .(Year,TeamName),  custom_function_totalouts)
names(TeamWiseOuts)[3] = "Total Outs"
#4
custom_function_totalovers <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1  &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Overs")]
data$Overs = sapply(data$Overs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Overs = sum(Overs),na.rm=TRUE)[2]
newdata <- x[order(-x$Overs),]
sum(newdata[1:n],na.rm=TRUE)
}
TeamWiseOvers = ddply(PastTeamData, .(Year,TeamName),  custom_function_totalovers)
names(TeamWiseOvers)[3] = "Total Overs"
########################Functions to find of Mean of Batting Ave,Bowl Ave,Batting S.R,Bowl S.R,Economy######################
#5
custom_function_totalBA <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1 & PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs","Outs","Batting.Average")]
data$Runs = sapply(data$Runs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
data$Outs = sapply(data$Outs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x=ddply(data,.(PlayerName),summarize,Batting.Average = ifelse(sum(Outs) > 0,sum(Runs,na.rm=TRUE)/sum(Outs,na.rm=TRUE),NA))[2]
newdata <- x[order(-x$Batting.Average),]
mean(newdata[1:n],na.rm=TRUE)
sum(newdata[1:n],na.rm=TRUE)/n
}
TeamWiseBA = ddply(PastTeamData, .(Year,TeamName),   custom_function_totalBA)
names(TeamWiseBA)[3] = "Batting Average"
#6
custom_function_totalBowlA <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1   &   PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","BowlRuns","Wickets","Bowling.Average")]
data$BowlRuns = sapply(data$BowlRuns, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
data$Wickets = sapply(data$Wickets, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x=ddply(data,.(PlayerName),summarize,Bowling.Average = ifelse(sum(Wickets) > 0,sum(BowlRuns,na.rm=TRUE)/sum(Wickets,na.rm=TRUE),NA))[2]
newdata <- x[order(-x$Bowling.Average),]
mean(newdata[1:7],na.rm=TRUE)
sum(newdata[1:7],na.rm=TRUE)/7
}
TeamWiseBowlA = ddply(PastTeamData, .(Year,TeamName),   custom_function_totalBowlA)
names(TeamWiseBowlA)[3] = "Bowling Average"
#7
custom_function_totalBattingSR <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1   &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs","Balls","Strike.Rate")]
data$Runs = sapply(data$Runs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
data$Balls = sapply(data$Balls, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x=ddply(data,.(PlayerName),summarize,Strike.Rate = ifelse(sum(Balls) > 0,(sum(Runs,na.rm=TRUE)/sum(Balls,na.rm=TRUE))*100,NA))[2]
newdata <- x[order(-x$Strike.Rate),]
mean(newdata[1:7],na.rm=TRUE)
sum(newdata[1:7],na.rm=TRUE)/7
}
TeamWiseBattingSR = ddply(PastTeamData, .(Year,TeamName),   custom_function_totalBattingSR)
names(TeamWiseBattingSR)[3] = "Batting SR"
#8
custom_function_totalBowlingSR <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1   &   PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Overs","Wickets","Bowl.SR")]
data$Overs = sapply(data$Overs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
data$Wickets = sapply(data$Wickets, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x=ddply(data,.(PlayerName),summarize,Bowl.SR = ifelse(sum(Wickets) > 0,(sum(Overs*6,na.rm=TRUE)/sum(Wickets,na.rm=TRUE)),NA))[2]
newdata <- x[order(-x$Bowl.SR),]
mean(newdata[1:7],na.rm=TRUE)
sum(newdata[1:7],na.rm=TRUE)/7
}
TeamWiseBowlingSR = ddply(PastTeamData, .(Year,TeamName),   custom_function_totalBowlingSR)
names(TeamWiseBowlingSR)[3] = "Bowling SR"
#9
custom_function_totalEconomy <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1 & PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","BowlRuns","Overs","Economy")]
data$BowlRuns = sapply(data$BowlRuns, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
data$Overs = sapply(data$Overs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x=ddply(data,.(PlayerName),summarize,Economy = ifelse(sum(Overs) > 0,(sum(BowlRuns,na.rm=TRUE)/sum(Overs,na.rm=TRUE)),NA))[2]
newdata <- x[order(-x$Economy),]
mean(newdata[1:7],na.rm=TRUE)
sum(newdata[1:7],na.rm=TRUE)/7
}
TeamWiseEconomy = ddply(PastTeamData, .(Year,TeamName),   custom_function_totalEconomy)
names(TeamWiseEconomy)[3] = "Economy"
#10
AllRounders = subset(PastTeamData,trim(PastTeamData$PlayingRole) == "Playing role: Allrounder")
##Number of allrounders in each team
ar=ddply(AllRounders, .(Year,TeamName),"nrow")
##Number of overseas bowlers
custom_function_OSbowl <- function(df)
{
nrow(df[df$Category=="Overseas" & grepl("Bowl",df$PlayingRole,ignore.case = TRUE),])
}
TeamWiseOSBowlers = ddply(PastTeamData, .(Year,TeamName),  custom_function_OSbowl)
names(TeamWiseOSBowlers)[3] = "OS Bowlers"
#10
AllRounders = subset(PastTeamData,trim(PastTeamData$PlayingRole) == "Playing role: Allrounder")
##Number of overseas bowlers
custom_function_OSbat <- function(df)
{
nrow(df[df$Category=="Overseas" & grepl("Bat",df$PlayingRole,ignore.case = TRUE),])
}
TeamWiseOSBat = ddply(PastTeamData, .(Year,TeamName),  custom_function_OSbat)
names(TeamWiseOSBat)[3] = "OS Batsmen"
TeamWiseData =""
TeamWiseData = merge(TeamWiseRuns,TeamWiseWickets,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseOuts,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseOvers,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseBA,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseBowlA,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseBattingSR,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseBowlingSR,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseEconomy,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseOSBowlers,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
TeamWiseData = merge(TeamWiseData,TeamWiseOSBat,by=intersect(c("Year","TeamName"),c("Year","TeamName")))
str(TeamWiseData)
TeamWiseData$TS1 = TeamWiseData$'Batting Average'/TeamWiseData$'Bowling Average'
TeamWiseData$TS2 = TeamWiseData$'Batting SR'/TeamWiseData$'Bowling SR'
TeamWiseData$TS3 = TeamWiseData$TS1*TeamWiseData$TS2
TeamWiseData[,c("Year","TeamName","TS3")]
MatchResults1 = MatchResults[MatchResults$Year != 2014 ,]
MatchResults1 = MatchResults1[MatchResults1$Team1Name != "Kochi",]
MatchResults1 = MatchResults1[MatchResults1$Team2Name != "Kochi",]
MatchResults1 = MatchResults1[MatchResults1$Team1Name != "Pune Warriors" ,]
MatchResults1 = MatchResults1[MatchResults1$Team2Name != "Pune Warriors" ,]
n= 7
x=NULL
newdata=NULL
custom_function_totalruns <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1  &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs")]
data$Runs = sapply(data$Runs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Runs = sum(Runs),na.rm=TRUE)[2]
newdata <- x[order(-x$Runs),]
sum(newdata[1:n],na.rm=TRUE)
}
TeamWiseRuns = ddply(PastTeamData, .(Year,TeamName),  custom_function_totalruns)
PastTeamData[PastTeamData$Year == 2008 & PastTeamData$TeamName == "Bangalore Royal Challengers ","Name"]
CSK2008Players = PastTeamData[PastTeamData$Year == 2008 & PastTeamData$TeamName == "Chennai Super Kings","Name"]
PastTeamData[PastTeamData$Year == 2008 & PastTeamData$TeamName == "Rajasthan Royals ","Name"]
RR2008Players = PastTeamData[PastTeamData$Year == 2008 & PastTeamData$TeamName == "Rajasthan Royals ","Name"]
PastTeamData[PastTeamData$Year == 2008 & PastTeamData$TeamName == "Bangalore Royal Challengers ","Name"]
PlayersData[PlayersData$Year == 2007 & PlayersData$PlayerName %in% RR2008Players & PlayersData$format %in%
c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs")]
data = PlayersData[PlayersData$Year == 2007 & PlayersData$PlayerName %in% RR2008Players & PlayersData$format %in%
c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs")]
data$Runs = sapply(data$Runs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Runs = sum(Runs),na.rm=TRUE)[2]
newdata <- x[order(-x$Runs),]
sum(newdata[1:7],na.rm=TRUE)
PlayersData$Year = as.integer(PlayersData$Year)
PastTeamData$Year = as.integer(PastTeamData$Year)
custom_function_totalruns <- function(df)
{
data = PlayersData[PlayersData$PlayerName %in% df$Name & PlayersData$Year == df$Year-1  &
PlayersData$format %in% c("ODI","T20I","TWENTY20"),c("PlayerName","format","Runs")]
data$Runs = sapply(data$Runs, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
x= ddply(data,.(PlayerName),summarize,Runs = sum(Runs),na.rm=TRUE)[2]
newdata <- x[order(-x$Runs),]
sum(newdata[1:n],na.rm=TRUE)
}
TeamWiseRuns = ddply(PastTeamData, .(Year,TeamName),  custom_function_totalruns)
str(PlayersData)
table(PlayersData$Year)
data = read.xlsx("PlayersData.xlsx",1,stringsAsFactors=FALSE,startRow=1,endRow=10)
data
data = read.xlsx("PlayersData.xlsx",1,startRow=1,endRow=10)
data
head(PlayersData)
PlayersData = read.xlsx("PlayersData.xlsx",1,stringsAsFactors=F,startRow=1,endRow=10)
PlayersData
PlayersData = read.xlsx("PlayersData.xlsx",1,stringsAsFactors=F)
)
